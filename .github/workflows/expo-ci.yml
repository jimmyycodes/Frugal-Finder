name: Expo CI

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - main
  schedule:
    - cron: '0 2 * * *'

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js front-end
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: 'npm'  # or yarn
          cache-dependency-path: FrugalApp/package-lock.json

      - name: Setup Node.js back-end
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: 'npm'
          cache-dependency-path: server/package-lock.json

      - name: Setup EAS
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Install front-end dependencies
        working-directory: FrugalApp
        run: npm install  # or npm install

      - name: Install back-end dependencies
        working-directory: server
        run: npm install  # or npm install

      - name: Run Jest tests front-end
        working-directory: FrugalApp
        run: npm test  -- --ci
      
      - name: Run Jest tests back-end
        working-directory: server
        run: npm test  -- --ci
      
      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.11'
      
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install undetected-chromedriver separately
        run: |
          pip install undetected-chromedriver

      - name: Debug MySQL Connection
        run: |
          echo "Checking MySQL Connection..."
          echo "DB_HOST=$DB_HOST"
          echo "DB_USER=$DB_USER"
          echo "DB_NAME=$DB_NAME"
          mysql --host="$DB_HOST" --user="$DB_USER" --password="$DB_PASSWORD" -e "SHOW DATABASES;"

      - name: Run Web Scrapers in Parallel
        env:
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_NAME: ${{ secrets.DB_NAME }}
        run: |
          python scraper/__init__.py